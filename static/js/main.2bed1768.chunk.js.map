{"version":3,"sources":["components/Facts/Facts.jsx","components/Productions/Productions.jsx","App.js","index.js"],"names":["Facts","model","useState","inputs","setinputs","useEffect","className","map","fact","idx","key","type","id","onChange","e","target","checked","htmlFor","Productions","actions","action","App","setActions","facts","console","log","fact0","fact1","fact2","push","fact4","fact3","fact5","fact6","fact7","fact8","fact9","ReactDOM","render","document","getElementById"],"mappings":"mcAGA,IA0CeA,EA1CD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EACGC,mBAAS,IADZ,mBAClBC,EADkB,KACVC,EADU,KAGzBC,qBAAU,WACNJ,EAAME,KACP,CAACA,IAcJ,OACI,wBAAIG,UAAU,SAbJ,CACV,4EACA,qLACA,kPACA,iHACA,+FACA,8KACA,iJACA,gLACA,mFACA,8KAKcC,KAAI,SAACC,EAAMC,GAAP,OACN,wBAAIC,IAAKD,EAAKH,UAAU,QACpB,2BACIK,KAAK,WACLC,GAAE,cAASH,GACXI,SAAU,SAACC,GACPV,E,yVAAU,CAAD,GACFD,EADE,eAEJW,EAAEC,OAAOH,GAAKE,EAAEC,OAAOC,cAIpC,2BAAOC,QAAO,cAASR,IAAQD,SCvBxCU,EAZK,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACnB,OACI,4BAEQA,EAAQZ,KAAI,SAACa,EAAQX,GAAT,OACR,wBAAIC,IAAKD,GAAMW,Q,MCiEpBC,MAnEf,WAAgB,IAAD,EACiBnB,mBAAS,CAAC,eAD3B,mBACNiB,EADM,KACGG,EADH,KA2Db,OACE,oCACE,kBAAC,EAAD,CAAOrB,MA1DG,SAACsB,GACb,IAAMJ,EAAU,GAchB,GAbAK,QAAQC,IAAIF,GAaTA,EAAMG,MACP,OAAGH,EAAMI,OAASJ,EAAMK,OACtBT,EAAQU,KAAK,8CACbP,EAAWH,IAGTI,EAAMO,OACRX,EAAQU,KAAK,0NAERN,EAAMQ,OAITZ,EAAQU,KAAK,kOACbV,EAAQU,KAAK,+HAJbV,EAAQU,KAAK,+OAMfV,EAAQU,KAAK,iCACbP,EAAWH,IAGTI,EAAMS,OAAST,EAAMU,OAASV,EAAMW,OAASX,EAAMY,OAASZ,EAAMa,OACpEjB,EAAQU,KAAK,kQACRN,EAAMQ,OAITZ,EAAQU,KAAK,kOACbV,EAAQU,KAAK,+HAJbV,EAAQU,KAAK,+OAMfV,EAAQU,KAAK,iCACbP,EAAWH,SAGbG,EAAW,CAAC,0CAGZA,EAAW,CAAC,8FAQZ,kBAAC,EAAD,CAAaH,QAASA,MC/D5BkB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.2bed1768.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport './Facts.css'\r\n\r\nconst Facts = ({ model }) => {\r\n    const [inputs, setinputs] = useState({});\r\n\r\n    useEffect(() => {\r\n        model(inputs);\r\n    }, [inputs])\r\n\r\n    const facts = [\r\n        'Пришло письмо',\r\n        'Письмо является ответом на другое',\r\n        'Письмо от пользователя из доверенного списка',\r\n        'Подписан на рассылку',\r\n        'Письмо от спамера',\r\n        'Письмо отправлено несколько раз',\r\n        'Письмо о выигрыше в лотерее',\r\n        'В письме предлагают что-то купить',\r\n        'В письме ссылка',\r\n        'Прикреплен подозрительный файл',\r\n    ];\r\n    return (\r\n        <ol className='facts'>\r\n            {\r\n                facts.map((fact, idx) =>\r\n                    <li key={idx} className='fact'>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            id={`fact${idx}`}\r\n                            onChange={(e) => {\r\n                                setinputs({\r\n                                    ...inputs,\r\n                                    [e.target.id]: e.target.checked\r\n                                });\r\n                            }}\r\n                        />\r\n                        <label htmlFor={`fact${idx}`}>{fact}</label>\r\n                    </li>\r\n                )\r\n            }\r\n        </ol>\r\n    )\r\n}\r\n\r\nexport default Facts\r\n","import React from 'react'\r\n\r\nconst Productions = ({ actions }) => {\r\n    return (\r\n        <ul>\r\n            {\r\n                actions.map((action, idx) =>\r\n                    <li key={idx}>{action}</li>\r\n                )\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Productions\r\n","import React, { useState } from 'react';\nimport Facts from './components/Facts/Facts'\nimport Productions from './components/Productions/Productions'\nimport './App.css';\n\nfunction App() {\n  const [actions, setActions] = useState(['No actions']);\n\n  const model = (facts) => {\n    const actions = [];\n    console.log(facts)\n    // if (facts.fact0 && !facts.fact1) { actions.push('Проверка не состоит ли отправитель в черном списке: не состоит') }\n    // else { setActions(!facts.fact0 ? ['Письмо не пришло'] : ['Не спам']); return; }\n    // if (!facts.fact2) { actions.push('Проверка на подписку на рассылку: не подписан') }\n    // else { actions.push('Проверка на подписку на рассылку: не подписан'); actions.push('Удалить из доверенного списка'); }\n    // if (!facts.fact3) { actions.push('Проверка не состоит ли отправитель в черном списке') }\n    // else { actions.push('Отписаться от рассылки'); setActions(actions); return; }\n    // if (facts.fact4) { actions.push('Жалоба на отправителя') }\n    // else { actions.push('Не спам'); setActions(actions); return; }\n    // if (facts.fact4 || facts.fact5 || facts.fact6 || facts.fact7 || facts.fact8 || facts.fact9) { actions.push('Заблокировать отправителя') }\n    // else { actions.push('Не спам'); setActions(actions); return; }\n    // actions.push('Добавить отправителя в базу спамеров');\n    // actions.push('Перемещение в спам');\n    if(facts.fact0) {\n      if(facts.fact1 || facts.fact2) {\n        actions.push('Не спам'); \n        setActions(actions); \n        return;\n      }\n      if (facts.fact4){\n        actions.push('Письмо от спамера - жалоба на отправителя...')\n          \n        if (!facts.fact3) { \n          actions.push('Проверка на подписку на рассылку: не подписан') \n        }\n        else { \n          actions.push('Проверка на подписку на рассылку: подписан');\n          actions.push('Отписаться от рассылки'); \n        } \n        actions.push('Спам'); \n        setActions(actions); \n        return;\n      }\n      if (facts.fact5 || facts.fact6 || facts.fact7 || facts.fact8 || facts.fact9) {\n        actions.push('Подозрительное письмо - блокировка отправителя...');\n        if (!facts.fact3) { \n          actions.push('Проверка на подписку на рассылку: не подписан') \n        }\n        else { \n          actions.push('Проверка на подписку на рассылку: подписан');\n          actions.push('Отписаться от рассылки'); \n        }\n        actions.push('Спам');    \n        setActions(actions); \n        return; \n      } \n      setActions(['Не спам'])\n    }\n    else {\n      setActions(['Письмо не пришло']);\n      return; \n    }\n  }\n\n  return (\n    <>\n      <Facts model={model} />\n      <Productions actions={actions} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}